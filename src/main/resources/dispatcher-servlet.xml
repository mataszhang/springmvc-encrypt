<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
         http://www.springframework.org/schema/context 
         http://www.springframework.org/schema/context/spring-context-3.1.xsd
	     http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
         http://www.springframework.org/schema/util
    	 http://www.springframework.org/schema/util/spring-util-3.1.xsd
    	 http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd">

	<bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<property name="formatters">
			<set>
				<bean class="com.myproject.springmvc.utils.DateFormatter">
					<property name="format" value="yyyy-MM-dd HH:mm:ss" />
				</bean>
			</set>
		</property>
	</bean>
	
  	<bean id="dateFormat" class="java.text.SimpleDateFormat">
		<constructor-arg value="yyyy-MM-dd HH:mm:ss" />
	</bean>

	<bean id="fasterxmlObjectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
		<property name="serializationInclusion">
			<util:constant
				static-field="com.fasterxml.jackson.annotation.JsonInclude.Include.NON_NULL" />
		</property>
	</bean>
	
	<bean id="codehausObjectMapper" class="org.codehaus.jackson.map.ObjectMapper">
		<property name="dateFormat" ref="dateFormat">
		</property>
		<property name="serializationInclusion">
			<util:constant
				static-field="org.codehaus.jackson.map.annotate.JsonSerialize.Inclusion.NON_NULL" />
		</property>
	</bean>
	
	<!-- 
		由于使用了spring4.1.1-release版本，所以需要加入下面，否则，输入浏览器controller地址，会报406错误
		参考：http://blog.csdn.net/kang89/article/details/9305693
	 -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>application/json</value>
				<value>application/javascript</value>
				<value>text/json</value>
				<value>text/javascript</value>
				<value>text/plain</value>
				<value>text/html</value>
			</list>
		</property>
		<property name="objectMapper" ref="fasterxmlObjectMapper"></property>
	</bean> 
	
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<context:annotation-config />
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven conversion-service="conversionService">
		
		<!-- HttpMessageConverter对应输出 -->
		<mvc:message-converters>
			<bean class="com.myproject.springmvc.converter.CustomMappingJacksonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>application/json</value>
						<value>application/javascript</value>
						<value>text/json</value>
						<value>text/javascript</value>
						<value>text/html</value>
					</list>
				</property>
				<property name="objectMapper" ref="fasterxmlObjectMapper"></property>
			</bean>
		</mvc:message-converters>
		
		<!-- HandlerMethodArgumentResolver对应输入 -->
		<mvc:argument-resolvers>
			<bean class="com.myproject.springmvc.resolver.RequestParamResolver">
				<property name="objectMapper" ref="codehausObjectMapper" />
			</bean>
		</mvc:argument-resolvers>
	</mvc:annotation-driven>
	
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/api/**" />
			<bean class="com.myproject.springmvc.interceptor.CheckRequestParamInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- Note: mapping是jsp页面写的，location是映射到的地址 -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:resources mapping="/login/**" location="/resources/login/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- 排除springmvc扫描到的@Service类,原因是如果springmvc扫描了@Service类，那么@Transactional方法上就无法回滚了 -->
	<!-- 参考：http://blog.csdn.net/z69183787/article/details/37819831 -->
	<context:component-scan base-package="com.myproject">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan>
	
   <bean class="com.myproject.springmvc.resolver.CustomSimpleMappingExceptionResolver">
   		<property name="exceptionMappings">
   			<props>
   				<prop key="com.myproject.springmvc.exception.LackArgumentsException">forward:/exception/lackArgumentsException</prop>
   			</props>
   		</property>
   </bean>
   
</beans>
